generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  // directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Status {
  WAITING
  REJECTED
  ACCEPTED
}

enum PurchaseType {
  FUNDED
  PURCHASED
}

enum ConfirmationStatus {
  REJECTED
  WAITING
  ACCEPTED
  INTERVIEW
}

enum PaymentStatus {
  PAID
  PROCESSED
}

enum DocumentType {
  PENDUKUNG
  GUIDELINES
}

enum Roles {
  FRANCHISEE
  FRANCHISOR
  ADMIN
}

model users {
  id            String  @id @default(uuid()) @db.Uuid
  status        Status
  name          String
  email         String  @unique
  password      String
  profile_image String?
  role          Roles

  createdAt     DateTime @default(now())
  updatedAt     DateTime? @updatedAt

  franchises          franchise_listings[]
  franchise_purchases franchise_purchases[]
  franchisor_profiles franchisor_profiles?
  user_notifications  user_notifications[]
  saved_franchises    saved_franchises[]
}

model franchise_purchases {
  id                  String             @id @default(uuid()) @db.Uuid
  user_id             String             @db.Uuid
  franchise_id        String             @db.Uuid
  purchase_type       PurchaseType
  confirmation_status Status
  payment_status      PaymentStatus
  paid_at             DateTime?

  user            users              @relation(fields: [user_id], references: [id])
  franchise       franchise_listings @relation(fields: [franchise_id], references: [id])
  funding_request funding_request?
}

model funding_request {
  id                String @id @default(uuid()) @db.Uuid
  purchase_id       String @unique @db.Uuid
  confirmation_status ConfirmationStatus
  address           String
  phone_number      String
  npwp              String
  franchise_address String
  ktp               String
  foto_diri         String
  foto_lokasi       String
  mou_franchisor    String
  mou_modal         String

  purchase franchise_purchases @relation(fields: [purchase_id], references: [id])
}

model franchisor_profiles {
  id        String @id @default(uuid()) @db.Uuid
  user_id   String @unique @db.Uuid
  ktp       String
  foto_diri String

  user users @relation(fields: [user_id], references: [id])
}

model franchise_listings {
  id                  String  @id @default(uuid()) @db.Uuid
  franchisor_id       String  @db.Uuid
  name                String
  price               Decimal
  image               String
  status              String
  location            String
  ownership_document  String
  financial_statement String
  proposal            String
  sales_location      String
  equipment           String
  materials           String

  franchisor           users                 @relation(fields: [franchisor_id], references: [id])
  purchases            franchise_purchases[]
  listing_documents    listing_documents[]
  listings_highlights  listings_highlights[]
  franchise_categories category_franchise[]
  saved_franchises     saved_franchises[]
}

model listing_documents {
  id           String       @id @default(uuid()) @db.Uuid
  id_franchise String       @db.Uuid
  type         DocumentType
  name         String
  path         String

  franchise franchise_listings @relation(fields: [id_franchise], references: [id])
}

model user_notifications {
  id      String   @id @default(uuid()) @db.Uuid
  user_id String   @db.Uuid
  title   String
  message String
  type    String
  is_read Boolean
  sent_at DateTime

  user users @relation(fields: [user_id], references: [id])
}

model listings_highlights {
  id           String @id @default(uuid()) @db.Uuid
  id_franchise String @db.Uuid
  title        String
  content      String

  franchise franchise_listings @relation(fields: [id_franchise], references: [id])
}

model events {
  id       String   @id @default(uuid()) @db.Uuid
  name     String
  price    Decimal
  datetime DateTime
  image    String
}

model category {
  id   String @id @default(uuid()) @db.Uuid
  name String

  category_franchises category_franchise[]
}

model category_franchise {
  id           String @id @default(uuid()) @db.Uuid
  franchise_id String @db.Uuid
  category_id  String @db.Uuid

  franchise_rel franchise_listings @relation(fields: [franchise_id], references: [id])
  category_rel  category           @relation(fields: [category_id], references: [id])
}

model saved_franchises {
  id           String @id @default(uuid()) @db.Uuid
  user_id      String @db.Uuid
  franchise_id String @db.Uuid

  user      users              @relation(fields: [user_id], references: [id])
  franchise franchise_listings @relation(fields: [franchise_id], references: [id])
}
